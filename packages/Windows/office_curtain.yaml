time_counter:
  office_curtain:
    name: Office Curtain Counter
    down_duration: 24
    up_duration: 25
    debounce: 1000

sensor:
  - platform: template
    sensors:
      office_curtain_state:
        value_template: >
          {% if states('cover.office_curtain_switch') == 'open' and state_attr("cover.office_curtain_switch", "current_position") == 100 %}
          closing
          {% elif states('cover.office_curtain_switch') == 'closed' and state_attr("cover.office_curtain_switch", "current_position") == 50 %}
          stopped
          {% elif states('cover.office_curtain_switch') == 'closed' and state_attr("cover.office_curtain_switch", "current_position") == 0 %}
          opening
          {% endif %}

cover:
  - platform: template
    covers:
      office_curtain:
        device_class: curtain
        friendly_name: "Office Curtain"
        position_template: "{{ states('time_counter.office_curtain') | int }}"
        availability_template: "{{ states('cover.office_curtain_switch') != 'unavailable' }}"
        open_cover:
          service: cover.open_cover
          entity_id: cover.office_curtain_switch
        close_cover:
          service: cover.close_cover
          entity_id: cover.office_curtain_switch
        stop_cover:
          service: cover.stop_cover
          entity_id: cover.office_curtain_switch
        set_cover_position:
          - service: "cover.{{ 'open_cover' if position > states('time_counter.office_curtain')|int else 'close_cover' }}"
            entity_id: cover.office_curtain_switch
          - service: time_counter.set
            data:
              entity_id: time_counter.office_curtain
              state: "{{ position }}"
        

automation:
  - alias: Office Curtain Time Counter According To Sensor
    trigger:
      - platform: state
        entity_id: sensor.office_curtain_state
    action:
      service: >
        {% if trigger.to_state.state == 'closing' %}
          time_counter.downcount
        {% elif trigger.to_state.state == 'opening' %}
          time_counter.upcount
        {% elif trigger.to_state.state == 'stopped' %}
          time_counter.stop
        {% endif %}
      data:
        entity_id:
          - time_counter.office_curtain

  - alias: Office Curtain Time Counter Stopped
    trigger:
      platform: event
      event_type: time_counter.stopped
      event_data:
        entity_id: time_counter.office_curtain
    action:
      - service: cover.stop_cover
        data:
          entity_id:
            - cover.office_curtain_switch